blueMoons.py - Lunar Cycles
The moon goes through phases because it orbits the earth and the sun hits it differently at 
different places in its orbit. This means that, depending on where it is in its orbit, 
you might see a full moon, right quarter moon, or even "no" moon (new moon) at all. It takes 
27.3 days for the moon to orbit the Earth, but the actual phase difference from one full moon 
to the next is 29.5 days because the earth cruises a cool 45 million miles around the sun in 
that 27.3 days. It takes 2.2 days for the the moon to make up for that distance and get all 
the way back to where you last saw a full moon.

Whenever the moon is full twice in one month, the second one is called a "blue moon." This 
last happened in July of 2015 on the 1st and 31st. The next time is January of 2018 (same days). 
You can research the timing, otherwise you can assume midnight. Write a program that determines 
how many "blue moons" there will be in third milenia (2000-2999)?

If you want to be really, really specific, the lunar month is actually 
29 days, 12 hours, and 44 minutes.

caseconverter.py and caseconverter_test.py - Writen a function caseConvert that accepts two arguments. The first is a string, the second is type. 
If the type is "camelcase" then convert the string to 
camelcase (each word except the first is capitalized, no spaces). 
If type is "snakecase" then convert the string to 
snakecase (each word is separated by a - and all lowercase). 
As a bonus, accept a string or an array. If it's an array, use .join and proceed accordingly.

def caseConvert(str, conversionType):

 //Your code here!!

 return convertedStr
